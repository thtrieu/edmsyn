library(edmsyn)
?syn
pars(students = 150, concepts = 8, items = 30)
p <- pars(students = 150, concepts = 8, items = 30)
g <- gen.apply(ALL.MODELS, p, n = 10)
g <- gen.apply(ALL.MODELS, p, n = 10)
ALL.MODELS
ALL.MODELS. <- ALL.MODELS[-c(3)]
ALL.MODELS.
g <- gen.apply(ALL.MODELS., p, n = 10)
g
lin.avg.8 <- g["lin.avg",][[8]]
lin.avg.8 <- g["lin.avg",1][[8]]
lin.avg.8 <- g["lin.avg",1]
lin.avg.8 <- g["lin.avg",1][[1]][[8]]
lin.avg.8
lin.avg.8$lin.avg
?down.stream
STRUCTURE
?up.stream
?viz
p <- pars(students=  15, items = 5)
d <- gen("poks", p, progress = TRUE)
d
d$poks
library(edmsyb)
library(edmsyn)
what?
??
)
?edmsyn
??edmsyn
edmsyn::toStr()
edmsyn::toStr
edmsyn::INTEGER
edmsyn::DEFINITE
?syn
simdin
sim.din
library(CDM)
?sim.din
library(edmsyn)
p <- pars(items = 20)
set.seed(30)
viz(get.par("po",p)$value)
set.seed(30)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",pars(p, density = 1))$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",p)$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 2))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 4))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 4))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 4))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 4))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 4))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 4))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 4))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 4))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.depth = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.it.per.tree =  = 18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.it.per.tree =  18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.it.per.tree =  18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.it.per.tree =  18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.it.per.tree =  18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.it.per.tree =  18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.it.per.tree =  18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.it.per.tree =  18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.it.per.tree =  18))$value)
viz(get.par("po",pars(p, max.depth = 3, min.it.per.tree =  18))$value)
library(edmsyn)
p <- pars(items = 20)
viz(get.par(min.ntree = 2)$value)
viz(get.par("po",pars(p,min.ntree = 2))$value)
viz(get.par("po",pars(p,min.ntree = 2))$value)
viz(get.par("po",pars(p,min.ntree = 2))$value)
viz(get.par("po",pars(p,min.ntree = 2))$value)
viz(get.par("po",pars(p,min.ntree = 2))$value)
viz(get.par("po",pars(p,min.ntree = 2))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
library(edmsyn)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
library(edmsyn)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10))$value)
viz(get.par("po",pars(p,min.depth = 10, max.depth = 3))$value)
viz(get.par("po",pars(p,min.depth = 10, max.depth = 3))$value)
viz(get.par("po",pars(p,min.depth = 10, max.depth = 3))$value)
viz(get.par("po",pars(p,min.depth = 10, max.depth = 3))$value)
viz(get.par("po",pars(p,min.depth = 10, max.depth = 3))$value)
viz(get.par("po",pars(p,min.depth = 10, max.depth = 3))$value)
viz(get.par("po",pars(p,min.depth = 10, max.depth = 3))$value)
viz(get.par("po",pars(p,min.depth = 10, max.depth = 3))$value)
viz(get.par("po",pars(p,min.depth = 10, max.depth = 3))$value)
viz(get.par("po",pars(p,min.depth = 10, max.depth = 3))$value)
viz(get.par("po",pars(p,min.depth = 10, max.depth = 3))$value)
?log
a <- 1
class(a) <- "trieu"
a
a+1
a+1 == 2
class(a)
a <- 1
class(a)
class(a) <- "trieu"
a
a > 0
a < c(1,2,3,4)
a < c(1.1,2.1,3.2,4.3)
library(edmsyn)
pars(students = 3, abi  = 1:5)
library(roxygen2)
library(devtools)
document()
getwd()
setwd("..")
install("edmsyn")
setwd("D:/github/edmsyn")
library(edmsyn)
pars(students = 3, abi  = 1:5)
library(edmsyn)
pars(students = 3, abi  = 1:5)
library(edmsyn)
pars(students = 3, abi  = 1:5)
pars(concepts = 3, skill.space.size = 9)
pars(concepts = c(3,2), skill.space.size = 9)
pars(concepts = c(4,4), skill.space.size = 9)
pars(concepts = 3, skill.space.size = 9)
pars(concepts = 3, skill.dist = 1:10)
pars(concepts = 3, skill.dist = rep(0.1,10))
pars(concepts = 3, skill.dist = rep(0.1,10))
library(edmsyn)
pars(concepts = 3, skill.dist = rep(0.1,10))
pars(skill.dist = rep(0.2,5)
)
pars(skill.dist = rep(0.2,5))$concepts
library(edmsyn)
pars(skill.dist = rep(0.2,5))$concepts
pars(skill.dist = rep(0.2,5))$concepts
pars(skill.dist = rep(0.2,5))$concepts
pars(skill.dist = rep(0.2,5))$concepts
library(edmsyn)
init()
library(edmsyn)
document()
library(edmsyn)
init()
init(abi.sd = 0)
library(edmsyn)
init()
library(edmsyn)
init()
library(edmsyn)
library(edmsyn)
init()
pars()
library(edmsyn)
pars()
pars()$init.vals
library(edmsyn)
pars(max.ntree = 3)
p <- pars(max.ntree = 0)
get.par("po", p)
get.par("po", pars(p, items = 20))
library(edmsyn)
get.par("po", pars(p, items = 20))
library(edmsyn)
get.par("po", pars(p, items = 20))
library(edmsyn)
get.par("po", pars(p, items = 20))
library(edmsyn)
get.par("po", pars(p, items = 20))
get.par("M", pars(Q = matrix(1,3,3), abi = 1:4))
get.par("M", pars(Q = matrix(1,3,3), abi = 1:4))
get.par("M", pars(Q = matrix(1,3,3), abi = 1:4))
get.par("M", pars(Q = matrix(1,3,3), abi = 1:4))
get.par("M", pars(Q = matrix(1,3,3), abi = 1:4))
get.par("M", pars(Q = matrix(1,3,3), abi = 1:4))
get.par("M", pars(Q = matrix(1,3,3), abi = 1:4), progress = TRUE)
pars(Q = matrix(1,20,20))
library(edmsyn)
library(edmsyn)
p <- pars(students = 20, items = 20, concepts = 5)
get.par("M",p)
get.par("M",p, progress = TRUE)
poks.data <- gen("poks",p,2)
library(edmsyn)
poks.data <- gen("poks",p,2)
library(edmsyn)
poks.data <- gen("poks",p,2)
library(edmsyn)
poks.data <- gen("poks",p,2)
a <- NULL
a["a"]<- 1
a
library(edmsyn)
poks.data <- gen("poks",p,2)
library(edmsyn)
poks.data <- gen("poks",p,n =2, progress = TRUE)
p
library(edmsyn)
library(edmsyn)
poks.data <- gen("poks",p,n =2, progress = TRUE)
p
poks.data
poks.data <- gen("poks",p,n =2, progress = TRUE)
library(edmsyn)
poks.data <- gen("poks",p,n =2, progress = TRUE)
library(edmsyn)
poks.data <- gen("poks",p,n =2, progress = TRUE)

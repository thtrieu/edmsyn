hell yeah
install.packages('devtools')
library('devtools')
install.packages(devtools)
install.packages('devtools')
install.packages('httr')
install.packages("/tmp/RtmpW4fpGq/downloaded_packages/httr_1.1.0.tar.gz", repos = NULL, type = "source")
install.packages('curl')
install.packages('libcurl')
install.package(devtools)
install.packages(devtools)
install.packages('devtools')
install.packages('r-devel')
install.packages('shiny')
library(shiny)
library(devtools)
install_github("klutometis/roxygen")
library(roxygen2)
install.packages('plyr')
install.packages('CDM')
library('devtools')
install.packages('plyr')
install.packages("~/Downloads/plyr_1.8.3.tar.gz", repos = NULL, type = "source")
1+1
setwd("/media/thtrieu/A6D85CBCD85C8C85/github/edmsyn")
library('edmsyn')
install_github('thtrieu/edmsyn','thtrieu')
library(devtools)
install_github('thtrieu/edmsyn','thtrieu')
document()
?pars
?viz
document()
?viz
document()
?viz
library(CDN)
library(CDM)
?din
p <- pars(p)
document()
?viz
document()
?viz
document()
?pars
document()
?pars
?get.par
document()
?gen.apply
?learn
poks.data <- gen("poks", pars(students = 15, items = 20))
learned.poks <- learn("poks", data = poks.data$poks)
viz(learned.poks$po)
class(learned.poks)
dina.data <- gen(dina, pars(students = 20, concepts = 4, items = 5))$dina
dina.data <- gen('dina', pars(students = 20, concepts = 4, items = 5))$dina
dina.syn <- syn('dina', data = dina.data, students = 50, n = 10)
dina.syn
document()
?learn
library(edmsyn)
setwd("~/edmsyn/vignettes")
library(devtools)
document()
install.packages(roxygen2)
install.packages('roxygen2')
library(roxygen2)
install('edmsyn')
setwd("~/")
setwd("~/")
install('edmsyn')
library(edmsyn)
gen("poks",pars(students = 15, items = 20))
p <- pars(students= 15, items = 20)
p
gen("poks",pars(students = 15, items = 20), progress = True)
gen("poks",pars(students = 15, items = 20), progress = TRUE)
install('edmsyn')
library(edmsyn)
gen("poks",pars(students = 15, items = 20), progress = TRUE)
p
get.par("min.depth, p")
get.par("min.depth",p)
get.par("min.it.per.tree",p)
get.par("Q",p)
get.par("M",p)
get.par("exp",p)
get.par("irt",p)
p
p
p <- pars(p, concepts= 4)
gen("dina",p)
gen("dina",p)$dina
gen("poks",p)
get.par("avg", par)
get.par("avg", p)
p$init.vals$avg
p$init.vals
init <-
)
install(edmsyn)
install('edmsyn')
library(edmsyn)
gen('poks',pars(students = 15, items = 20))
install('edmsyn')
library(edmsyn)
gen('exp',p(items = 15, students = 20))
gen('exp',pars(items = 15, students = 20))
p
p$init.vals
get.par("student.var", p)
get.par("students", p)
get.par("items", p)
get.par("avg", p)
get.par("min.depth",p)
p$init.vals
install('edmsyn')
library(edmsyn)
as.list(match.call())
as.list(environment())
a = function(a = 2, b = 4){}
a = function(a = 2, b = 4){
print as.list(match.call())
print(as.list(match.call()))
a = function(a = 2, b = 4){
print(as.list(match.call()))
print(as.list(environment()))
}
a(2,4)
pwd()
pwd
setwd("~/edmsyn")
printwd
getwd()
library(devtolls)
library(devtools)
library(roxygen2)
install('edmsyn')
setwd('..')
getwd()
install('edmsyn')
library(edmsyn)
edmtree.dump
edmtree.dump()
library(edmsyn)
edmtree.dump()
install('edmsyn')
library(edmsyn)
edmtree.load()
document()
setwd('edmsyn')
document()
setwd('..')
install('edmsyn')
library(edmsyn)
edmtree.dump()
edmtree.fetch('poks')
edmtree.add('new', NULL, list(c('student','items')), NULL, list(function(a, b){return(a+b)}))
node.name = 'new'
tell < -c('student', 'items')
tell <- c('students', 'items')
gen <- list(c('students', 'items'))
f.tell <- function(x){return list(x[[1]], x[[2]])}
f.tell <- function(x){return(list(x[[1]], x[[2]]))}
f.gen <- list(function(a, b){return(list(a,b))})
edmtree.add(node.name, tell, gen, f.tell, f.gen)
debug(edmtree.add(node.name, tell, gen, f.tell, f.gen))
document()
setwd('edmsyn')
document()
setwd('..')
install(edmsyn)
install('edmsyn')
library(edmsyn)
edmtree.add(node.name, tell, gen, f.tell, f.gen)
getwd()
setwd('edmsyn')
document()
setwd('..')
install('edmsyn')
tada()
edmtree.load()
getwd()
setwd('edmsyn')
document()
setwd(..)
setwd('..')
install('edmsyn')
library(edmsyn)
tada()
edmtree.load()
setwd('edmsyn')
document()
setwd('..')
install('edmsyn')
library(edmsyn)
tada()
edmtree.load()
tada()
try
setwd('edmsyn')
document()
document()
setwd('..')
install('edmsyn')
tada()
edmtree.load()
tada()
tryyyy
trieu = new.env()
names(trieu)
assign('a',2,envir=trieu)
get('a',envir=trieu)
names(trieu)
clear(trieu)
rm(list = names(trieu), envir=trieu)
names(trieu)
c('a','b','c')
for (i in c('a','b','c')) {print(i)}
getwd()
setwd('edmsyn')
document()
document()
setwd('..')
install(edmsyn)
install('edmsyn')
library(edmsyn)
setwd('edmsyn')
document()
setwd('..')
install(edmsyn)
install('edmsyn')
library(edmsyn)
